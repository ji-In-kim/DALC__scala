__<pandas 설치 및 기본실습>__


1) Pandas
: 데이터를 일관성 있게 동일한 형태로 통합해주는 도구/ Python 라이브러리에서 

Pandas의 기본목적 : 서로 다른 유형의 데이터를 공통의 형식으로 정리하는 것 => 핵심 데이터 구조
Pandas의 특징 : 서로 다른 유형의 데이터를 공통의 형식으로 정리 / 고수준의 연산 수행 가능

2) Pandas 사용방법
: Colab에서 import
__import pandas as pd__

3) Pandas 객체
-구조 : 데이터 구조, 데이터 값, 시리즈 구조/ 인덱스는 데이터값의 위치를 나타내는 주소의 역할
-Series : 1차원 배열의 형태
-데이터프레임 : 2차원 배열구조 (-> 다양한 응용에서 활용되는 데이터구조), 통합 데이터를 활용하여 데이터 조작 가능
-----------------------------------------------------------------------------------------------------------------------
4) Pandas의 시리즈
: 인덱스를 가진 1차원 배열로서 넘파이의 1차원 array와 유사
- values와 index 속성을 가짐
- 일반적으로 인덱스와 슬라이싱 방식으로 데이터에 접근
- 딕셔너리와 달리 시리즈 내의 데이터 일부를 가져오는 연산도 가능

5) Pandas의 인덱스
- 원하는 인덱스를 정의하여 사용 가능(정수뿐만 아니라 문자열도 가능)

'''
'data라는 시리즈 객체를 만들 때, index라는 속성에 인덱스로 사용될 항목을 가진 리스트를 할당하였습니다.'

6) Pandas의 딕셔너리 구조
:기본적으로는 타입이 지정된 키를 타입이 지정된 값으로 매핑하는 구조, 따라서 딕셔너리를 이용하여 시리즈를 생성하는 것이 일반적

ex> 딕셔너리로부터 시리즈를 만드는 예 (11:30)

6) Series 객체 구성하기
- pd.Series(data, index = idex)
-시리즈 객체의 첫 번째 인자인 data에 스칼라 값을 지정가능
-일반적으로 딕셔너리를 시리즈 객체의 입력 인자로 활용하여 시리즈 객체를 생성
 - 딕셔너리와 시리즈 객체르 자세히 비교 ===> (13:35)
- 다른 결과를 얻고 싶으면 인덱스를 명시적으로 설정


7) DataFrame
- 행 인덱스 : Series인덱스와 동일
- 열 인덱스 : 열 이름
- 데이터프레임 : 행 인덱스와 열 이름을 갖는 행렬, 시리즈 객체의 연속
- (15:56~17:09)
-DataFrame stated
-데이터 구성하기 (17:10~20:46)


====================================================================

__< Pandas 심화>__




